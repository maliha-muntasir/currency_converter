/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Currency_Converter;

import javax.swing.JOptionPane;
import sun.util.calendar.CalendarUtils;

/**
 *
 * @author Asus
 */
public class CurrencyConverter extends javax.swing.JFrame {
      String[] currencyUnits={
        "units",
        "US Dollars",
        "NIgerian Naira",
        "Brazilian Real",
        "Canadian Dollar",
        "Kenyan Shilling",
        "Indonesian Rupiah",
        "Indian Rupee",
        "Philipine Pisco",
        "Pakistani Rupee",
        "Bangladeshi Taka",
        "Srilankan Rupee",
        "Afghan Afghani",
        "Nepalese Rupee",
        "Bahraini Dinar",
        "Armenium Dram",
        "Azerbaizani Manat",
        "Bhutan Currency",
        "Brunei Dollar",
        "Combodian Riel",
        "Chinese Yuan",
        "Hongkong Dollar",
        "Iraqi Dinar",
        "Iranian Rial",
        "Israeli NewShekel",
        "Japanese Yen",
        "Jordanian Dinar",
        "Kazakhstani Tenge",
        "Kuwaiti Dinar",
        "Kyrgystani Som",
        "Lebanese Pound",
        "Malaysian Ringgit"
    };
    
 double US_Dollars=1.31;
    double Nigerian_Naira=476.57;
    double Brazilian_Real=5.47;
    double Canadian_Dollar=1.71;
    double Kenyan_Shilling=132.53;
    double Indonesian_Rupiah=19554.94;
    double Indian_Rupee=95.21;
    double Philipine_Pisco=71.17;
    double Pakistani_Rupee=162.74;
    double Bangladeshi_Taka=110.61;
    double Srilankan_Rupee=240.76;
    double Afghan_Afghani=100.52;
    double Nepalese_Rupee=154.04;
    double Bahraini_Dinar=.49;
    double Armenian_Dram=644.60;
    double Azerbaizani_Manat=2.22;
    double Bhutan_Currency=96.70;
    double Brunei_Dollar=1.77;
    double Combodian_Riel=5328.08;
    double Chinese_Yuan=8.76;
    double Hongkong_Dollar=10.13;
    double Iraqi_Dinar=1556.81;
    double Iranian_Rial=55014.18;
    double Israeli_NewShekel=4.42;
    double Japanese_Yen=136.44;
    double Jordanian_Dinar=.93;
    double Kazakhstani_Tenge=561.01;
    double Kuwaiti_Dinar=.40;
    double Kyrgustani_Som=106.00;
    double Lebanese_pound=1983.55;
    double Malaysian_Ringgit=5.44;
    
    
    /**
     * Creates new form CurrencyConverter
     */
    public CurrencyConverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        firstCountry = new javax.swing.JComboBox();
        SecondCountry = new javax.swing.JComboBox();
        t1 = new javax.swing.JTextField();
        t2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        firstCurrencyUnit = new javax.swing.JLabel();
        secondCurrencyUnit = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Currency Converter");

        firstCountry.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        firstCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose One....", "USA", "Nigeria", "Brazil", "Canada", "Kenyan", "Indonesia", "India", "Philipine", "Pakistan", "Bangladesh", "Srilanka", "Afghanistan", "Nepal", "Bahrain", "Armenian", "Azerbaizan", "Bhutan", "Brunei", "Combodia", "China", "Hongkong", "Iraq", "Iran", "Israel", "Japan", "Jordan", "Kazakhstan", "Kuwait", "Kyrgystan", "Lebanon", "Malaysia" }));
        firstCountry.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                firstCountryItemStateChanged(evt);
            }
        });

        SecondCountry.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        SecondCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose One....", "USA", "Nigeria", "Brazil", "Canada", "Kenyan", "Indonesia", "India", "Philipine", "Pakistan", "Bangladesh", "Srilanka", "Afghanistan", "Nepal", "Bahrain", "Armenian", "Azerbaizan", "Bhutan", "Brunei", "Combodia", "China", "Hongkong", "Iraq", "Iran", "Israel", "Japan", "Jordan", "Kazakhstan", "Kuwait", "Kyrgystan", "Lebanon", "Malaysia" }));
        SecondCountry.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SecondCountryItemStateChanged(evt);
            }
        });

        t1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        t2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("from Currency of");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("To Currency of");

        firstCurrencyUnit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        firstCurrencyUnit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        firstCurrencyUnit.setText("units");

        secondCurrencyUnit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        secondCurrencyUnit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        secondCurrencyUnit.setText("units");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Convert Currency");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t1)
                            .addComponent(firstCountry, 0, 272, Short.MAX_VALUE)
                            .addComponent(firstCurrencyUnit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SecondCountry, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(secondCurrencyUnit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addGap(74, 74, 74))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SecondCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secondCurrencyUnit)
                    .addComponent(firstCurrencyUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t1ActionPerformed

    private void firstCountryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_firstCountryItemStateChanged
        // TODO add your handling code here
        int position=firstCountry.getSelectedIndex();
        firstCurrencyUnit.setText(currencyUnits[position]);
    }//GEN-LAST:event_firstCountryItemStateChanged

    private void SecondCountryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SecondCountryItemStateChanged
        // TODO add your handling code here:
  int position=SecondCountry.getSelectedIndex();
        secondCurrencyUnit.setText(currencyUnits[position]);
    }//GEN-LAST:event_SecondCountryItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //convert currency
        if(firstCountry.getSelectedIndex()==0 || SecondCountry.getSelectedIndex()==0|| t1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"You must select both countries and must input the amount.","Error Message",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        double amountToChange=Double.parseDouble(t1.getText());
        
        double amountInPounds=0.0;
        double amountChanged=0.0;
        switch(firstCountry.getSelectedItem().toString())
        {
            case "USA": amountInPounds=amountToChange/US_Dollars;break;
            case "Nigeria": amountInPounds=amountToChange/Nigerian_Naira;break;
            case "Brazil": amountInPounds=amountToChange/Brazilian_Real;break;     
            case "Canada": amountInPounds=amountToChange/Canadian_Dollar;break;
            case "Kenyan": amountInPounds=amountToChange/Kenyan_Shilling;break;
            case "Indonesia": amountInPounds=amountToChange/Indonesian_Rupiah;break;
            case "India": amountInPounds=amountToChange/Indian_Rupee;break;
            case "Philippine": amountInPounds=amountToChange/Philipine_Pisco;break;
            case "Pakistan": amountInPounds=amountToChange/Pakistani_Rupee;break; 
            case "Bangladesh":amountInPounds=amountToChange/Bangladeshi_Taka;break;
            case "Srilanka":amountInPounds=amountToChange/Srilankan_Rupee;break;
            case "Afghanistan":amountInPounds=amountToChange/Afghan_Afghani;break;
            case "Nepal":amountInPounds=amountToChange/Nepalese_Rupee;break;
            case "Bahrain":amountInPounds=amountToChange/Bahraini_Dinar;break;
            case "Armenian":amountInPounds=amountToChange/Armenian_Dram;break;
            case "Azerbaizan":amountInPounds=amountToChange/Azerbaizani_Manat;break;
            case "Bhutan":amountInPounds=amountToChange/Bhutan_Currency;break;
            case "Brunei":amountInPounds=amountToChange/Brunei_Dollar;break;
            case "Combodia":amountInPounds=amountToChange/Combodian_Riel;break;
            case "China":amountInPounds=amountToChange/Chinese_Yuan;break;
            case "Hongkong":amountInPounds=amountToChange/Hongkong_Dollar;break;
            case "Iraq":amountInPounds=amountToChange/Iraqi_Dinar;break;
            case "Iran":amountInPounds=amountToChange/Iranian_Rial;break;
            case "Israel":amountInPounds=amountToChange/Israeli_NewShekel;break;
            case "Japan":amountInPounds=amountToChange/Japanese_Yen;break;
            case "Jordan":amountInPounds=amountToChange/Jordanian_Dinar;break;
            case "Kazakhstan":amountInPounds=amountToChange/Kazakhstani_Tenge;break;
            case "Kuwait":amountInPounds=amountToChange/Kuwaiti_Dinar;break;
            case "Kyrgystan":amountInPounds=amountToChange/Kyrgustani_Som;break;
            case "Lebanon":amountInPounds=amountToChange/Lebanese_pound;break;
            case "Malaysia":amountInPounds=amountToChange/Malaysian_Ringgit;break;
            default:amountInPounds=0.0; 
        }
        //double amountChanged=0.0;
        switch(SecondCountry.getSelectedItem().toString())
        {
            case "USA":amountChanged=amountInPounds* US_Dollars;break; 
            case "Nigeria":amountChanged=amountInPounds* Nigerian_Naira;break;
            case "Brazil":amountChanged=amountInPounds* Brazilian_Real;break;
            case "Canada":amountChanged=amountInPounds* Canadian_Dollar;break; 
            case "Kenyan":amountChanged=amountInPounds* Kenyan_Shilling;break;
            case "Indonesia":amountChanged=amountInPounds* Indonesian_Rupiah;break;
            case "India":amountChanged=amountInPounds* Indian_Rupee;break; 
            case "Philippine":amountChanged=amountInPounds* Philipine_Pisco;break;
            case "Pakistan":amountChanged=amountInPounds* Pakistani_Rupee;break;
            case "Bangladesh":amountChanged=amountInPounds* Bangladeshi_Taka;break;
            case "Srilanka":amountChanged=amountInPounds* Srilankan_Rupee;break;
            case "Afghanistan":amountChanged=amountInPounds* Afghan_Afghani;break;
            case "Nepal":amountChanged=amountInPounds* Nepalese_Rupee;break;
            case "Bahrain":amountChanged=amountInPounds* Bahraini_Dinar;break;
            case "Armenian":amountChanged=amountInPounds* Armenian_Dram;break;
            case "Azerbaizan":amountChanged=amountInPounds* Azerbaizani_Manat;break;
            case "Bhutan":amountChanged=amountInPounds* Bhutan_Currency;break;
            case "Brunei":amountChanged=amountInPounds* Brunei_Dollar;break;
            case "Combodia":amountChanged=amountInPounds* Combodian_Riel;break;
            case "China":amountChanged=amountInPounds* Chinese_Yuan;break;
            case "Hongkong":amountChanged=amountInPounds* Hongkong_Dollar;break;
            case "Iraq":amountChanged=amountInPounds* Iraqi_Dinar;break;
            case "Iran":amountChanged=amountInPounds* Iranian_Rial;break;
            case "Israel":amountChanged=amountInPounds* Israeli_NewShekel;break;
            case "Japan":amountChanged=amountInPounds* Japanese_Yen;break;
            case "Jordan":amountChanged=amountInPounds* Jordanian_Dinar;break;
            case "Kazakhstan":amountChanged=amountInPounds* Kazakhstani_Tenge;break;
            case "Kuwait":amountChanged=amountInPounds* Kuwaiti_Dinar;break;
            case "Kyrgystan":amountChanged=amountInPounds*Kyrgustani_Som;break;
            case "Lebanon":amountChanged=amountInPounds* Lebanese_pound;break;
            case "Malaysia":amountChanged=amountInPounds* Malaysian_Ringgit;break;
            default:amountChanged=amountInPounds* 0.0;
        }
        String value= String.format("%.2f", amountChanged);
        t2.setText(value);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         firstCountry.setSelectedIndex(0);
        SecondCountry.setSelectedIndex(0);
        t1.setText(null);
        t2.setText(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CurrencyConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox SecondCountry;
    private javax.swing.JComboBox firstCountry;
    private javax.swing.JLabel firstCurrencyUnit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel secondCurrencyUnit;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    // End of variables declaration//GEN-END:variables
}
